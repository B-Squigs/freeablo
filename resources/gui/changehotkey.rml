<rml>
    <head>
        <style>
            body
            {
                font-family: FreeabloGold42;
                text-align: center;
                height: 100%;
                width: 100%;
            }

            div#topContainer
            {
                position: absolute;
                top: 280px;
            }
            
            span#smlogo
            {
                icon-decorator: faanim;
                icon-animfile: /ui_art/smlogo.pcx&trans=0,255,0&vanim=154;
                icon-playtime: 0.8;

                display: inline-block;
                width: 390px;
                height: 154px;
            }
            
            div#innerTopContainer
            {
                position: absolute;
                top: 200px;
            }

        </style>

        <script>
import rocket
import freeablo
import hotkey
import docmanage

rk = rocket.key_identifier
modifiers = [rk.RSHIFT, rk.LSHIFT,
             rk.RCONTROL, rk.LCONTROL,
             rk.RMENU, rk.LMENU,
             rk.RWIN, rk.LWIN, 175]
             
newHotkey = hotkey.Hotkey()

def onLoad(document):
    document.func = ""
    container = document.GetElementById('innerTopContainer')
    container.inner_rml = '<span id="menuEntry0"></span><br/>'
    elem = container
    elem.inner_rml = "Press A Key"
 
def onKeyDown(event, document):    
    global newHotkey
    global modifiers
    global rk
    
    changeHotkey = docmanage.manager.getDoc(docmanage.manager.ChangeHotKeyFile)
    if event.parameters['key_identifier'] == rk.ESCAPE:
        docmanage.manager.closeDoc(docmanage.manager.ChangeHotKeyFile)
        docmanage.manager.showDoc(docmanage.manager.HotKeyMenuFile)
        
        return
    
    if event.parameters['key_identifier'] in [rk.CAPITAL, rk.NUMLOCK, rk.SCROLL, rk.PAUSE, rk.RETURN, rk.NUMPADENTER]:
        return

    oldHotkeys = freeablo.getHotkeys()
    if event.parameters['key_identifier'] in modifiers:
        if event.parameters['key_identifier'] == modifiers[0] or \
           event.parameters['key_identifier'] == modifiers[1]:
                newHotkey.shift = True
        if event.parameters['key_identifier'] == modifiers[2] or \
           event.parameters['key_identifier'] == modifiers[3]:
                newHotkey.ctrl = True
        if event.parameters['key_identifier'] == modifiers[4] or \
           event.parameters['key_identifier'] == modifiers[5]:
                newHotkey.alt = True
        if event.parameters['key_identifier'] == modifiers[6] or \
           event.parameters['key_identifier'] == modifiers[7] or \
           event.parameters['key_identifier'] == modifiers[8]:
                return
    else:
        newHotkey.key = event.parameters['key_identifier']
        
        for oldHotkey in oldHotkeys:
            if oldHotkey == newHotkey:
                docmanage.manager.loadDoc(docmanage.manager.ChangeHotKeyErrorFile)
                docmanage.manager.showDoc(docmanage.manager.ChangeHotKeyErrorFile)
                return 

        changeHotkey.func = changeHotkey.func[1:-1] if changeHotkey.func[0] == "'" else changeHotkey.func
        freeablo.setHotkey(changeHotkey.func, [newHotkey.key, newHotkey.shift, newHotkey.ctrl, newHotkey.alt]) 
        docmanage.manager.closeDoc(docmanage.manager.ChangeHotKeyFile)
        docmanage.manager.reloadDoc(docmanage.manager.HotKeyMenuFile)
        docmanage.manager.showDoc(docmanage.manager.HotKeyMenuFile)

def onKeyUp(event, document):
    global newHotkey
    global modifiers

    if event.parameters['key_identifier'] in modifiers:
        if event.parameters['key_identifier'] == modifiers[0] or \
           event.parameters['key_identifier'] == modifiers[1]:
                newHotkey.shift = False
        if event.parameters['key_identifier'] == modifiers[2] or \
           event.parameters['key_identifier'] == modifiers[3]:
                newHotkey.ctrl = False
        if event.parameters['key_identifier'] == modifiers[4] or \
           event.parameters['key_identifier'] == modifiers[5]:
                newHotkey.alt = False 
        </script>
    </head>

    <body onkeydown="onKeyDown(event, document)"
          onkeyup="onKeyUp(event, document)"
          onload="onLoad(document)">
        <div id="topContainer">
            <span id="smlogo"></span> <br/>
            <div id="innerTopContainer"></div> 
        </div>
    </body>
</rml>
